<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PartyDAO">

<insert id = "insertParty" parameterType="party">
	INSERT INTO PARTY (PARTY_TITLE,
	PARTY_CREATOR,
	PARTY_PRE_MBTI1,
	PARTY_PRE_MBTI2,
	PARTY_PRE_MBTI3,
	PARTY_PRE_MBTI4,
	CATEGORY_NAME,
	PARTY_INTRODUCE,
	PARTY_LOCATION,
	PARTY_TUMB_PATH,
	PARTY_MAXIMUM)
	VALUES (#{PARTY_TITLE},#{PARTY_CREATOR},#{PARTY_PRE_MBTI1},
	#{PARTY_PRE_MBTI2},#{PARTY_PRE_MBTI3},#{PARTY_PRE_MBTI4}
	,#{CATEGORY_NAME},#{PARTY_INTRODUCE},#{PARTY_LOCATION},
	#{PARTY_TUMB_PATH},${PARTY_MAXIMUM})
</insert>
	
	<select id = "getParty" resultType="party">
	SELECT PARTY_ID, PARTY_TITLE, PARTY_CREATOR, PARTY_PRE_MBTI1, PARTY_PRE_MBTI2, 
	PARTY_PRE_MBTI3, PARTY_PRE_MBTI4, CATEGORY_NAME, PARTY_INTRODUCE, PARTY_LOCATION,
	 PARTY_TUMB_PATH, PARTY_MAXIMUM, PARTY_REG_DATE
	 FROM PARTY WHERE PARTY_ID =#{PARTY_ID} AND PARTY_AVAILABLE = TRUE
	
	</select>
	
	<select id = "getNewParty" resultType="party">
	select *  from Party order by PARTY_REG_DATE desc limit 1;
	</select>
	
	<delete id= "deleteParty" parameterType="party">
	update party
	set PARTY_AVAILABLE = false
	where party_id = ${PARTY_ID}
	
	</delete>
	
	<select id ="getPartyList" resultType="party" parameterType="java.util.HashMap">
	SELECT * FROM PARTY 
	WHERE
		1=1
		AND PARTY_AVAILABLE = TRUE
	<if test="!@org.springframework.util.ObjectUtils@isEmpty(CATEGORY_NAME)">
		AND CATEGORY_NAME = #{CATEGORY_NAME}
	</if>
	<if test="!@org.springframework.util.ObjectUtils@isEmpty(SEARCH_KEYWORD)">
		AND PARTY_TITLE LIKE CONCAT('%',#{SEARCH_KEYWORD},'%') 
	</if>
	
	<if test="!@org.springframework.util.ObjectUtils@isEmpty(START_ROW) and !@org.springframework.util.ObjectUtils@isEmpty(LIST_SIZE)">
		LIMIT #{LIST_SIZE} OFFSET #{START_ROW}
	</if>
</select>

<select id = "getPartyCnt" resultType="int" parameterType="java.util.HashMap">
	SELECT COUNT(*) FROM PARTY
	WHERE
	 	1=1
		AND PARTY_AVAILABLE = TRUE
	<if test="!@org.springframework.util.ObjectUtils@isEmpty(CATEGORY_NAME)">
		AND CATEGORY_NAME = #{CATEGORY_NAME}
	</if>
	<if test="!@org.springframework.util.ObjectUtils@isEmpty(SEARCH_KEYWORD)">
		AND PARTY_TITLE LIKE CONCAT('%',#{SEARCH_KEYWORD},'%')
	</if>
</select>

<select id = "getRate" resultType="party">
		SELECT AVG(RATE1) AS PARTY_RATE1, AVG(RATE2) AS PARTY_RATE2,
		AVG(RATE1) AS PARTY_RATE3
		FROM SCHEDULE_MEMBER WHERE PARTY_ID=#{PARTY_ID}
</select>

<select id="searchBestParty" resultType="party">
	select  p.PARTY_ID, p.PARTY_TITLE, PARTY_PRE_MBTI1, PARTY_PRE_MBTI2, PARTY_PRE_MBTI3, PARTY_PRE_MBTI4, u.MBTI_ID, mbti_name, P.PARTY_TUMB_PATH
 from party p join member_list m join user u join mbti on p.party_id=m.PARTY_ID and m.USER_ID=u.USER_ID and u.mbti_id=mbti.mbti_id
 where (select count(party_id) from member_list where party_id=p.party_id) >1 AND MBTI.MBTI_ID=#{mbti_id}
 GROUP BY PARTY_ID
 order by ((select count(u1.mbti_id) from party p1 join member_list m1 join user u1 on p1.party_id=m1.PARTY_ID and m1.USER_ID=u1.USER_ID 
where p1.party_id=p.party_id group by u1.MBTI_ID having u1.mbti_id=u.mbti_id))
/(select count(party_id) from member_list where party_id=p.party_id) DESC;
</select>

<select id ="getPartyUserList" resultType="member">
	SELECT ml.USER_ID, PARTY_REQUEST, MBTI_NAME
	FROM member_list ml
	JOIN USER u ON u.USER_ID=ml.USER_ID 	
	JOIN MBTI mb ON u.MBTI_ID=mb.MBTI_ID 
    WHERE PARTY_ID=#{PARTY_ID}
	ORDER BY REG_DATE DESC
	LIMIT #{listSize} OFFSET #{startRow};
</select>

<select id ="getPartyUserListCnt" resultType="int">

	SELECT COUNT(*)
	FROM member_list
	WHERE PARTY_ID=#{PARTY_ID}
	ORDER BY REG_DATE DESC ;
	
</select>

<update id = "confirmMember">
	UPDATE MEMBER_LIST
	SET PARTY_REQUEST = TRUE
	WHERE user_Id = #{user_Id};
</update>
	
<delete id="deleteReg">
	DELETE FROM MEMBER_LIST
	WHERE user_Id = #{user_Id};
</delete>
	
</mapper>