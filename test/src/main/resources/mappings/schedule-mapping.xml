<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="schDAO">

<insert id ="insertSchDAO" parameterType="schedule">
	insert into schedule ( PARTY_ID, SCH_TITLE,
	 SCH_WRITER, SCH_CONTENT, LOCATION_ADDRESS, LOCATION_NAME, LOCATION_X, LOCATION_Y, SCH_NOTE,
	  SCH_MEMBER_COUNT, SCH_DATE ,USER_ID) values
	 (#{party_id},
	#{sch_title},#{sch_writer},#{sch_content},#{location_address},#{location_name},#{location_x},
	#{location_y},#{sch_note},#{sch_member_count},#{sch_date},#{user_id})
</insert>

<select id="getScheduleList" resultType="schedule">
SELECT SCH_ID, PARTY_ID, SCH_TITLE, SCH_WRITER, SCH_CONTENT, LOCATION_ADDRESS, LOCATION_NAME, LOCATION_X, LOCATION_Y, SCH_NOTE, SCH_MEMBER_COUNT, SCH_DATE 
FROM SCHEDULE WHERE SCH_DATE LIKE ('${year}-${month}%') AND SCH_AVAILABLE=TRUE AND PARTY_ID=#{party_id}
ORDER BY SCH_DATE ASC
</select>


<select id="getScheduleList2" resultType="schedule">
SELECT SCH_ID, PARTY_ID, USER_ID, SCH_TITLE, SCH_WRITER, SCH_CONTENT, LOCATION_ADDRESS, LOCATION_NAME, LOCATION_X, LOCATION_Y, SCH_NOTE, SCH_MEMBER_COUNT, SCH_DATE 
FROM SCHEDULE WHERE SCH_DATE LIKE ('${year}-${month}-${day}%') AND SCH_AVAILABLE=TRUE AND PARTY_ID=#{party_id}
ORDER BY SCH_ID ASC
LIMIT #{listSize} OFFSET #{startRow}
</select>

<select id="getScheduleList3" resultType="schedule">
SELECT SCH_ID, PARTY_ID, SCH_TITLE, SCH_WRITER, SCH_CONTENT, LOCATION_ADDRESS, LOCATION_NAME, LOCATION_X, LOCATION_Y, SCH_NOTE, SCH_MEMBER_COUNT, SCH_DATE 
FROM SCHEDULE 
WHERE SCH_DATE LIKE ('${year}-${month}%') AND PARTY_ID IN (SELECT PARTY_ID FROM MEMBER_LIST WHERE USER_ID=#{user_id})
</select>

<select id="getScheduleList4" resultType="schedule">
 SELECT SCH_ID, PARTY_ID, USER_ID, SCH_TITLE, SCH_WRITER, SCH_CONTENT, LOCATION_ADDRESS, LOCATION_NAME, LOCATION_X, LOCATION_Y, SCH_NOTE, SCH_MEMBER_COUNT, SCH_DATE 
FROM SCHEDULE
WHERE SCH_DATE LIKE ('${year}-${month}-${day}%') AND PARTY_ID IN (SELECT PARTY_ID FROM MEMBER_LIST WHERE USER_ID=#{user_id})
ORDER BY SCH_ID ASC
LIMIT #{listSize} OFFSET #{startRow}
</select>



<select id="getScheduleCnt" resultType="int">
SELECT COUNT(*) FROM  SCHEDULE 
WHERE SCH_DATE LIKE ('${year}-${month}-${day}%')
AND SCH_AVAILABLE=TRUE AND PARTY_ID=#{party_id}
ORDER BY SCH_DATE ASC
</select>

<select id="getScheduleCnt2" resultType="int">
SELECT COUNT(*) FROM  SCHEDULE 
WHERE SCH_DATE LIKE ('${year}-${month}-${day}%')
AND SCH_AVAILABLE=TRUE AND PARTY_ID IN (SELECT PARTY_ID FROM MEMBER_LIST WHERE USER_ID=#{user_id})
ORDER BY SCH_DATE ASC
</select>

<insert id="cntUp" parameterType="schedule">
INSERT INTO SCHEDULE_MEMBER (USER_ID, SCH_ID, PARTY_ID) VALUES (#{user_id},#{sch_id},#{party_id})
</insert>

<delete id="cntDown" parameterType="schedule">
DELETE FROM SCHEDULE_MEMBER WHERE USER_ID=#{user_id} AND SCH_ID=#{sch_id}
</delete>

<delete id= "deleteSch" parameterType="schedule">
UPDATE SCHEDULE SET SCH_AVAILABLE=FALSE 
WHERE SCH_ID = #{sch_id} 
</delete>

<select id="getCurrentMemberCnt" resultType="int">
SELECT COUNT(*) FROM  SCHEDULE_MEMBER 
WHERE SCH_ID=#{sch_id}
</select>

<select id="getCntList" resultType="schedule">
SELECT USER_ID,PARTY_ID,SCH_ID FROM SCHEDULE_MEMBER WHERE SCH_ID=#{sch_id}
</select>

<update id="scheduleReview" parameterType="schedule">
UPDATE SCHEDULE_MEMBER SET RATE1=${rate1}, RATE2=${rate2}, RATE3=${rate3}
WHERE USER_ID=#{user_id} AND SCH_ID=#{sch_id} AND PARTY_ID =#{party_id}
</update>

<select id="getNewSchedule" resultType="schedule">
SELECT SCH_ID FROM SCHEDULE ORDER BY SCH_ID DESC LIMIT 1
</select>

</mapper>